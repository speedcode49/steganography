import cv2
import os

def text_to_binary(text):
    return ''.join(format(ord(char), '08b') for char in text)

def binary_to_text(binary):
    binary_chunks = [binary[i:i+8] for i in range(0, len(binary), 8)]
    text = ''.join(chr(int(chunk, 2)) for chunk in binary_chunks)
    return text

def hide_text_in_image(image_path, text, output_image_path):
    # Load the image
    image = cv2.imread(image_path)
    if image is None:
        print(f"Failed to load image at {image_path}. The file may not be a valid image.")
        return
    
    binary_text = text_to_binary(text) + '1111111111111110'  # Delimiter to indicate end of text
    data_index = 0
    
    for row in image:
        for pixel in row:
            for channel in range(3):  # Iterate over R, G, B channels
                if data_index < len(binary_text):
                    pixel[channel] = int(format(pixel[channel], '08b')[:-1] + binary_text[data_index], 2)
                    data_index += 1
    
    cv2.imwrite(output_image_path, image)
    os.startfile(output_image_path)
    print(f"Data Hiding in Image completed successfully and saved as {output_image_path}")

def extract_text_from_image(image_path):
    # Load the image
    image = cv2.imread(image_path)
    if image is None:
        print(f"Failed to load image at {image_path}. The file may not be a valid image.")
        return
    
    binary_text = ""
    for row in image:
        for pixel in row:
            for channel in range(3):  # Iterate over R, G, B channels
                binary_text += format(pixel[channel], '08b')[-1]
    
    delimiter = '1111111111111110'
    if delimiter in binary_text:
        binary_text = binary_text[:binary_text.index(delimiter)]
        text = binary_to_text(binary_text)
        print("Hidden text extracted: ", text)
    else:
        print("No hidden text found.")

# Main function to choose hide or extract mode
def main():
    mode = input("Enter 'h' to hide text or 'e' to extract text: ").lower()
    if mode == 'h':
        image_path = input("Enter the path to the image: ")
        text = input("Enter the text to hide: ")
        output_image_path = "output.png"
        hide_text_in_image(image_path, text, output_image_path)
    elif mode == 'e':
        image_path = input("Enter the path to the image: ")
        extract_text_from_image(image_path)
    else:
        print("Invalid mode. Please enter 'h' or 'e'.")

# Run the main function
main()
